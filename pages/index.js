import Head from "next/head";
import styles from "../styles/Home.module.css";
import authURL from "../lib/authRequest";
import getTopSongs from "../lib/getTopSongs";
import { useEffect, useState } from "react";
import validateLink from "../lib/validateLink";
import ItemInfo from "../components/ItemInfo";
import Alert from "../components/Alert";
import Nav from "../components/Nav";

export default function Home(props) {
  const [token, setToken] = useState(0);
  const [hash, setHash] = useState(0);
  const [topItems, setTopItems] = useState(0);
  const [timeRange, setTimeRange] = useState("medium_term");
  const [amount, setAmount] = useState(20);
  const [playlistLink, setPlaylistLink] = useState(0);
  const [playlistId, setPlaylistId] = useState(0);
  const [playlistName, setPlaylistName] = useState(0);
  const [alert, setAlert] = useState(false);
  const [message, setMessage] = useState(0);

  useEffect(() => {
    if (window.location.hash) {
      setToken(window.location.hash.slice(14));
      setHash(window.location.hash);
    } else {
      console.log("No hash fragment");
    }
    console.log(token);
  }, [token]);

  function handleTextInput(event) {
    setPlaylistLink(event.target.value);
  }

  function handleSelection(value) {
    setTimeRange(value);
  }

  function showAlert(message) {
    setMessage(message);
    setAlert("alert");
    setTimeout(() => setAlert("activeAlert"), 100);
    setTimeout(() => setAlert("notActive"), 2000);
    setTimeout(() => setAlert(false), 5000);
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {alert ? <Alert active={alert} message={message} /> : <></>}
      <h1 className={styles.title}>Spotify Mixer</h1>
      <div id="action-button-container">
        {token !== 0 ? (
          <div className={styles.formContainer}>
            <div className={styles.selectContainer}>
              <label htmlFor="time">Choose Time Range:</label>
              <select
                name="time"
                onChange={(e) => handleSelection(e.target.value)}
                defaultValue="medium_term"
              >
                <option value="long_term">Long-Term</option>
                <option value="medium_term">Medium-Term</option>
                <option value="short_term">Short-Term</option>
              </select>
            </div>
            <hr></hr>
            <input
              className={styles.optionInput}
              type="number"
              min={1}
              max={50}
              defaultValue={20}
              name="amount"
              onInput={(event) => {
                setAmount(event.target.valueAsNumber);
              }}
            ></input>
            <label htmlFor="amount">Amount of Songs (Max: 50)</label>
            <button
              id="action-button"
              onClick={() =>
                amount > 0 && amount < 51
                  ? getTopSongs(token, amount, timeRange).then((data) => {
                      console.log(data);
                      setTopItems(data.items);
                    })
                  : showAlert("Invalid amount")
              }
            >
              Get Top Songs
            </button>
          </div>
        ) : (
          <button id="auth-button" onClick={authURL}>
            Authorize
          </button>
        )}
      </div>
      <div className={styles.container}>
        {topItems !== 0 ? (
          <ItemInfo
            topItems={topItems}
            id={playlistId}
            token={token}
            alertFunc={showAlert.bind(this)}
          />
        ) : (
          <></>
        )}
      </div>
      <div className={styles.playlistContainer}>
        <label htmlFor="playlist">Enter the link to your playlist here:</label>
        <input
          className={styles.textInput}
          type="text"
          name="playlist"
          placeholder="https://open.spotify.com/playlist/{...}?si={...}"
          onChange={(e) => handleTextInput(e)}
        ></input>
        <button
          onClick={async function (e) {
            let checkedLink = await validateLink(
              playlistLink,
              showAlert.bind(this),
              token
            );
            if (checkedLink.playlistId) {
              setPlaylistId(checkedLink.playlistId);
              e.target.innerText = "Valid!";
              e.target.id = "valid-playlist";
              setPlaylistName(checkedLink.playlistName);
            } else {
              e.target.innerText = "Invalid";
              e.target.id = "invalid-playlist";
            }
          }}
        >
          Check Playlist
        </button>
        {playlistName ? (
          <h2>
            Currently selected playlist: <u>{playlistName}</u>
          </h2>
        ) : (
          <></>
        )}
      </div>
      {hash ? <Nav hash={hash} /> : <></>}
    </div>
  );
}
